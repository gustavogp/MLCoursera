function plotData(X, y)
%   PLOTDATA(x,y) plots the data points with + for the positive examples
%   and o for the negative examples. X is assumed to be a Mx2 matrix.

% Create New Figure
figure; hold on;

% ====================== YOUR CODE HERE ======================
% Instructions: Plot the positive and negative examples on a
%               2D plot, using the option 'k+' for the positive
%               examples and 'ko' for the negative examples.
%

pos = find(y == 1);
neg = find(y == 0);

plot(X(pos,1),X(pos,2), 'k+', 'LineWidth', 2, 'Markersize', 7);
plot(X(neg,1),X(neg,2), 'ko', 'MarkerFaceColor', 'y', 'Markersize', 7);

% =========================================================================

hold off;

end
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function g = sigmoid(z)
%   J = SIGMOID(z) computes the sigmoid of z.

% You need to return the following variables correctly 
g = zeros(size(z));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the sigmoid of each value of z (z can be a matrix,
%               vector or scalar).

g = realpow(1 + exp(-z), -1);

% =============================================================

end
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function [J, grad] = costFunction(theta, X, y)
%   J = COSTFUNCTION(theta, X, y) computes the cost of using theta as the
%   parameter for logistic regression and the gradient of the cost
%   w.r.t. to the parameters.

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta
%
% Note: grad should have the same dimensions as theta
%
J = (1/m) * sum(-y'*log(sigmoid(X*theta)) -(1-y)'*log(1-sigmoid(X*theta)));

grad = ((1/m) * (sigmoid(X*theta) - y)'*X)';

% =============================================================

end
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function [J, grad] = costFunctionReg(theta, X, y, lambda)
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta

J = (1/m) * sum(-y'*log(sigmoid(X*theta)) -(1-y)'*log(1-sigmoid(X*theta))) + lambda/(2*m)*(sum(realpow(theta, 2)) - realpow(theta(1), 2));

grad1 = ((1/m) * (sigmoid(X*theta) - y)'*X)';
grad2 = ((1/m) * (sigmoid(X*theta) - y)'*X)' + (lambda/m)*theta;
grad(1) = grad1(1);
for i =2:size(theta)
   grad(i) = grad2(i);
endfor;

% =============================================================

end
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function p = predict(theta, X)
%   p = PREDICT(theta, X) computes the predictions for X using a 
%   threshold at 0.5 (i.e., if sigmoid(theta'*x) >= 0.5, predict 1)

m = size(X, 1); % Number of training examples

% You need to return the following variables correctly
p = zeros(m, 1);

% ====================== YOUR CODE HERE ======================
% Instructions: Complete the following code to make predictions using
%               your learned logistic regression parameters. 
%               You should set p to a vector of 0's and 1's
%
p = floor(sigmoid(X*theta) + 0.5);

% =========================================================================

end
